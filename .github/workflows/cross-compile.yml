name: Cross-Compile Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            output: afk-fortnite-linux-amd64
            deps: |
              sudo apt-get update
              sudo apt-get install -y libx11-dev xorg-dev libxtst-dev libpng++-dev
              sudo apt-get install -y xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev
              sudo apt-get install -y libxkbcommon-x11-dev libxkbcommon-dev
          - os: windows-latest
            goos: windows
            goarch: amd64
            output: afk-fortnite-windows-amd64.exe
            deps: ""
          - os: macos-latest
            goos: darwin
            goarch: arm64
            output: afk-fortnite-darwin-arm64
            deps: ""
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: ${{ matrix.deps }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
      if: hashFiles('**/go.sum') != ''

    - name: Verify and download dependencies
      run: |
        go mod verify || true
        go mod tidy
        go mod download
        go mod verify

    - name: Create dist directory
      run: mkdir -p dist

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 1
      run: go build -v -o dist/${{ matrix.output }} .

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output }}
        path: dist/${{ matrix.output }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist/
        merge-multiple: true

    - name: Create checksums
      run: |
        cd dist
        sha256sum * > checksums.txt

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/afk-fortnite-linux-amd64
          dist/afk-fortnite-windows-amd64.exe
          dist/afk-fortnite-darwin-arm64
          dist/checksums.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}